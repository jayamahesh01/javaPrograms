public class TowerOfHanoi {
    
    // Recursive function to solve Tower of Hanoi puzzle
    public static void solveHanoi(int n, char fromRod, char toRod, char auxRod) {
        // Base case: If only one disk, move it from source to destination
        if (n == 1) {
            System.out.println("Move disk 1 from rod " + fromRod + " to rod " + toRod);
            return;
        }
        
        // Recursive case: Move top n-1 disks from source to auxiliary rod
        solveHanoi(n - 1, fromRod, auxRod, toRod);
        
        // Move the nth disk from source to destination rod
        System.out.println("Move disk " + n + " from rod " + fromRod + " to rod " + toRod);
        
        // Move the n-1 disks from auxiliary rod to destination rod
        solveHanoi(n - 1, auxRod, toRod, fromRod);
    }
    
    public static void main(String[] args) {
        int n = 3; // Number of disks
        solveHanoi(n, 'A', 'C', 'B'); // Names of rods: A is source, C is destination, B is auxiliary
    }
}